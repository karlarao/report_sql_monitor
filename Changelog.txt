Changelog
=========

I suggest to rely on Github for details about code changes, this will only be a macro about "functionalities"
Was supposed to start on day 1, better late than never no? :-)

v1705
=====
1. Fixed bug in Top 15 wait events
2. Introduced plan with substree to Top N executions
3. Improved algorithm for node color collapsed / expand

v1704
=====
1. Fixed bug on Plan Details -> IO Bytes from ASH
2. Fixed bug on Raw ASH for recursive SQLs
3. Plan Tree collapse now adjust the color of the collpased node to include all its children
4. New report showing number of distinct sessions executing the SQL, helps in tracking down short-lived sessions / frequent logons
5. Reduced number of STA run reported 

v1703
=====
1. Introduced SUBSTR around low/high_value conversion to avoid SQL*Plus crashing with spurious raw data
2. Moved most of the SQL to q'[]' notation (internal improvement, no user impact)
3. Introduced subtree impact on plan tree, will keep both plan trees in place for some time
4. New standalone script sqld360_create_sql_baseline.sql to help creating baselines from existing plans

v1702
=====
1. Added "trend" line to avg X/exec reports (section 4b)
2. Fixed bug that prevented low/high value translation from being turned off
3. Fixed bug that caused Top N executions under Plan Details to show data for slaves that never joined execution as "standalone"
4. Removed Style column from HTML reports

v1701
=====
1. Changed a few charts parameter to make it nicer during copy&paste
2. Added new observation on num_rows = 0 at some point in the same, implemented using MATCH_RECOGNIZE
3. Put back the CLEAR COL at the beginning of SQLd360 execution

v1624
=====
1. Added column SQL_FULL_PLAN_HASH_VALUE
2. Translated virtual column into underlying expression in histogram page for expressions

v1623
=====
1. Added SQL Tuning Advisor section to column 5, will only report on past tasks, won't run STA for the SQL (like SQLT does)
2. Modified report Buffer gets/row/execution to keep just buffer gets/row (dropping executions)
3. Fixed bug on report Top 15 Step/Wait/Object where the sorting was on the wrong column
4. Fixed bug on SQL Performance Summary
5. Added script to extract basic table stats 

v1622
=====
1. Raw ASH includes data for SQL with TOP_LEVEL_SQL_ID equals to the seeded one and SQL_ID different than that, goal is to capture recursive (enabled only when SQL spends time on PL/SQL)
2. SQLd360 stops executing when it consumed all the time allocated by eDB360 (the *next* SQL ID will be ignored, the current will be complete)
3. Added label to many bar charts that were missing it
4. Added plan in txt format to Plan Details page
5. Added SQL Patch to SQL Performance Summary

v1621
=====
1. Added support for Materialized Views under Object and Metadata section
2. Replaced pie charts with bar charts, easier to show differences in size
3. Modified charts to show similar colors to EM when dealing with wait events / wait classes
4. Removed calls to procedure DBMS_STATS.CONVERT_RAW inserting result into the plan_table, replaced with inline calls to functions in UTL_RAW
5. Added Observation on redundant indexes
6. Modified SQL Plan Directives SQL to support DS results stored in SPD (new in 12.2)
7. Added new report under In-Memory section (some new in 12.2)
8. Modified formula for "Elapsed time per .. execution" removing the LEAST(max-min, count) to be just max-min (not sure why it was the other way around)
9. Fixed bug on Partition Statistics History 


v1620
=====
1. Introduced limit (configurable) to number of plans to focus on unde Plan Details page. Plans are selected based on the amount of data we have for each of them
2. Disabled by default the usage of v$object_dependency to build list of tables (too much unnecessary info brought over)
3. Disabled SQL_TRACE for SQLd360 execution itself, never used so why doing it in the first place.
4. Replaced list of tables stored in SQLPlus variable with rows into plan_table, allows to handle long list (SQLPlus variable is max 3k chars)
5. Added USER_ID into from ASH, included in Raw ASH and List of executions from ASH reports
6. Added Raw ASH into to Top SQL executions under Plan Details
7. Added report Average buffer gets per row per execution per Plan Hash Value from AWR, will help spot "bad plans on paper"
8. Minor cosmetic changes